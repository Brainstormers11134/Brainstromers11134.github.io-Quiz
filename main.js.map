{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/User.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/page-routing.module.ts","webpack:///./src/app/questions/questions.component.css","webpack:///./src/app/questions/questions.component.html","webpack:///./src/app/questions/questions.component.ts","webpack:///./src/app/quiz.service.ts","webpack:///./src/app/user-login.service.ts","webpack:///./src/app/user-login/user-login.component.css","webpack:///./src/app/user-login/user-login.component.html","webpack:///./src/app/user-login/user-login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class User {\r\n    public email: string;\r\n    public password: string;\r\n\r\n    constructor()\r\n    {\r\n             \r\n    }\r\n  }\r\n\r\n\r\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  \\n  <router-outlet></router-outlet>\\n  \"","import { Component } from '@angular/core';\nimport {Router}from '@angular/router'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyQuizApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuestionsComponent } from './questions/questions.component';\n\nimport { PageRoutingModule } from './page-routing.module';\nimport { HomePageComponent } from './home-page/home-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserLoginComponent,\n    QuestionsComponent,\n    \n    HomePageComponent,\n    \n   \n  ],\n  imports: [\n    BrowserModule,HttpClientModule,FormsModule,CommonModule, PageRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  home-page works!\\n  \\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, Component } from '@angular/core';\nimport{RouterModule,Routes} from '@angular/router';\nimport { QuestionsComponent} from './questions/questions.component'\nimport { UserLoginComponent } from './user-login/user-login.component';\n\nimport { AuthGuard } from './auth/auth.guard';\n\n\n\nconst routes:Routes=[\n\n  {path:'questionpage',component:QuestionsComponent},//,canActivate:[AuthGuard]},\n  {path:'loginPage',component:UserLoginComponent},\n  \n  {path:'',redirectTo:'/loginPage',pathMatch:'full'}\n];\n@NgModule({\n  imports:\n  \n\n  [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule]\n  \n})\nexport class PageRoutingModule { }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ucy9xdWVzdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<html>\\n    \\n  <body>\\n    \\n  <h3 class=\\\"heading\\\"> IT Tech quiz </h3>\\n  <form name=\\\"quiz\\\">\\n  <ol>\\n  <div class = \\\"container\\\">\\n  \\n  <hr color=\\\"red\\\"/>\\n  \\n  <table>\\n  <tr *ngFor=\\\"let book of questionService.qns\\\">\\n\\n    <li>{{book.Question1}}</li> \\n    <li>{{book.option1}}</li>\\n    <li>{{book.option2}}</li>\\n    <li>{{book.option3}}</li>\\n    <li>{{book.option4}}</li>\\n \\n  </table>\\n  <div class = \\\"move\\\">\\n \\n  <button type=\\\"button\\\" class=\\\"btn btn-success submit\\\">Submit</button> \\n  </div>\\n  </div>\\n  </ol>\\n  </form>\\n  </body>\\n  </html> \\t\\n\\n\\n\\n\\n            \\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuizService } from '../quiz.service';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n\n  constructor(private router:Router,private questionService:QuizService) { }\n\n  ngOnInit() {\n    this.questionService.getQuestions().subscribe(\n      (data:any)=>{\n        this.questionService.qns=data;\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class QuizService {\n  rootUrl=\"assets/data/QuestionJson.json\"\n  qns:any[];\n  constructor(private http:HttpClient) { }\n\n\n\n  getQuestions()\n{\n  return this.http.get(this.rootUrl)\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient }    from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport{ User }from './User';\nimport{Router} from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n \n  constructor(private http:HttpClient,private router:Router) {\n   }\n   configUrl = \"/assets/data/UserLoginDetails.json\";\n   getUser(): Observable<User[]>\n   {\n     return this.http.get<User[]>(this.configUrl);\n   }\n   /*loginUser( email:string,password: string) {\n      var body = {\n        email: email,\n        password: password\n      }\n      return this.http.post(this.configUrl, body);\n    }*/\n\n    loginUser(user) {\n      return this.http.post<any>(this.configUrl, user)\n    }\n  \n    logoutUser() {\n      localStorage.removeItem('token')\n      this.router.navigate(['/loginpage'])\n    }\n  \n    getToken() {\n      return localStorage.getItem('token')\n    }\n  \n    loggedIn() {\n      return !!localStorage.getItem('token')    \n    }\n    \n  }\n\n  \n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbG9naW4vdXNlci1sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<body>    \\n<nav class=\\\"navbar navbar-inverse bs-dark\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <a class=\\\"navbar-brand r\\\" href=\\\"#\\\">Brand_Name</a>\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li><a href=\\\"Header%20n%20Footer.html\\\">Home</a></li>\\n            <li><a href=\\\"Header%20n%20Footer.html\\\">Sign Up</a></li>\\n            <li><a href=\\\"Header%20n%20Footer.html\\\">Contact</a></li>\\n        </ul>\\n        </div>\\n        </div>\\n    </div>\\n    </nav>\\n<div class=\\\"container-fluid bg\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\"></div>\\n        <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\n            <!-- Start -->\\n        <form #newUserForm=\\\"ngForm\\\"  (ngSubmit)=\\\"onSubmit(newUserForm)\\\"  class=\\\"form-container\\\">\\n               \\n  <div class=\\\"form-group\\\">\\n    <font color = \\\"white\\\"><label for=\\\"exampleInputEmail1\\\">Username Or Email</label></font>\\n    <input type=\\\"email\\\"   class=\\\"form-control\\\"  id=\\\"exampleInputEmail1\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"userModel.email\\\" #useremail=\\\"ngModel\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\n  </div>\\n  <div class=\\\"form-group\\\"> \\n    <input type=\\\"password\\\" class=\\\"form-control\\\"  id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"userModel.password\\\"  #userpassword=\\\"ngModel\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\n  </div>\\n  <div class=\\\"checkbox\\\">\\n    <label>\\n      <font color = \\\"white\\\"><input type=\\\"checkbox\\\"> Remember me</font>\\n    </label>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"!newUserForm.form.valid\\\">Login</button>\\n  \\n</form>\\n            <!-- End -->\\n        </div>\\n    </div>\\n    </div>\\n</body>\\n<footer class=\\\"foot\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <p>This is footer</p>\\n        </div>\\n        <div class=\\\"bottom-foot\\\">\\n            <div class=\\\"col-md-5\\\">Copyrights @ Brainstormers11134 Trespassers will be prosecuted</div>\\n            <div class=\\\"col-xs-7\\\">\\n                <ul class=\\\"same-line\\\">\\n                    <li><a href=\\\"Header%20n%20Footer.html\\\">Home</a></li>\\n                    <li><a href=\\\"Header%20n%20Footer.html\\\">References</a></li>\\n                    <li><a href=\\\"Header%20n%20Footer.html\\\">About</a></li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserLoginService } from '../user-login.service';\nimport{ User }from '../User';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport{Router} from '@angular/router';\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n  loginUserData={};\n  public users : User[];\n  public result:any;\n  isSuccess:boolean=false;\n  constructor(private userloginservice: UserLoginService,private router:Router) {}\n  userModel =new User();\n  \n     \n/*loginUser()\n{\n  \n  this.userloginservice.loginUser(this.loginUserData)\n  .subscribe(\n            res=>console.log(res),\n            err=>console.log(err))\n}*/\n  \n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this.userloginservice.getUser()\n    .subscribe(users => this.users = users);\n  }\n\n  \nvalidateCredentials(email:string,password:string):boolean\n{\n this.users.forEach(element => {\n   if(element.email==this.userModel.email&&element.password==this.userModel.password)\n   {\n    \n     this.isSuccess=true;   \n   }\n   else{\n    alert(\" invalid credentails\")\n    \n   }\n  \n });\nreturn this.isSuccess;\n}\n  \n \nonSubmit(email:string,password:string)\n{\n  console.log(\"on submitt\")\n  console.log(this.validateCredentials(email,password))\n  if( this.validateCredentials(email,password))\n  {\n    console.log(\"after validation \")\n  \n    this.userloginservice.loginUser(this.userModel)\n    .subscribe(\n      res => {\n        localStorage.setItem('token', res.token)\n        this.router.navigate(['/loginPage'])\n      },\n      err => console.log(err)\n    ) \n  }\n  \n}\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}